# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI + CD for FastAPI

on:
  push:
    branches:
      - ia-work   # run only when you push to your branch
  pull_request:
    branches:
      - ia-work  # also run on PRs targeting your branch


permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    steps:
    # Step 1: Checkout the repo
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Step 2: Set up Python
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
      
    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f ai-service/requirements.txt ]; then pip install -r ai-service/requirements.txt; fi
        
    # Step 4: Lint your code
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ai-service/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ai-service/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
     # Step 5: Run tests
    - name: Test with pytest
      run: |
        pytest ai-service/tests/ --maxfail=1 --disable-warnings -q

# --- CD Steps: build & push Docker image ---
    # Step 6: Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Step 7: Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./ai-service
        file: ./ai-service/Dockerfile
        push: true
        tags: dimarco0/ia-service-image:latest